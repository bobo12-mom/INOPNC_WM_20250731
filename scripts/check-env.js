#!/usr/bin/env node

/**
 * Environment variable checker for production deployments
 * Run this script to verify all required environment variables are available
 */

console.log('üîç Checking environment variables...\n')

// Required environment variables
const requiredVars = [
  'NEXT_PUBLIC_SUPABASE_URL',
  'NEXT_PUBLIC_SUPABASE_ANON_KEY',
  'NEXT_PUBLIC_VAPID_PUBLIC_KEY'
]

// Optional environment variables (server-side only)
const optionalVars = [
  'SUPABASE_SERVICE_ROLE_KEY',
  'VAPID_PRIVATE_KEY',
  'VAPID_SUBJECT'
]

let allGood = true
const missing = []
const present = []

// Check required variables
console.log('üìã Required Variables (Client-side):')
requiredVars.forEach(varName => {
  const value = process.env[varName]
  if (value) {
    console.log(`  ‚úÖ ${varName}: ${value.substring(0, 20)}...`)
    present.push(varName)
  } else {
    console.log(`  ‚ùå ${varName}: MISSING`)
    missing.push(varName)
    allGood = false
  }
})

console.log('\nüìã Optional Variables (Server-side):')
optionalVars.forEach(varName => {
  const value = process.env[varName]
  if (value) {
    console.log(`  ‚úÖ ${varName}: ${value.substring(0, 20)}...`)
  } else {
    console.log(`  ‚ö†Ô∏è  ${varName}: Not set (optional)`)
  }
})

console.log('\n' + '='.repeat(50))

if (allGood) {
  console.log('üéâ All required environment variables are present!')
  console.log('\nüìù Deployment checklist:')
  console.log('  1. ‚úÖ Environment variables configured')
  console.log('  2. üîÑ Run: npm run build (to test build)')
  console.log('  3. üöÄ Deploy with: vercel --prod')
} else {
  console.log('‚ùå Missing required environment variables!')
  console.log('\nüìù To fix this issue:')
  console.log('  1. Go to Vercel Dashboard')
  console.log('  2. Navigate to: Your Project ‚Üí Settings ‚Üí Environment Variables')
  console.log('  3. Add these missing variables for Production environment:')
  missing.forEach(varName => {
    console.log(`     - ${varName}`)
  })
  console.log('  4. Redeploy your application')
  
  process.exit(1)
}

// Additional validation for Supabase URL format
if (process.env.NEXT_PUBLIC_SUPABASE_URL) {
  const url = process.env.NEXT_PUBLIC_SUPABASE_URL
  if (!url.startsWith('https://') || !url.includes('.supabase.co')) {
    console.log('\n‚ö†Ô∏è  Warning: NEXT_PUBLIC_SUPABASE_URL format looks incorrect')
    console.log(`   Expected: https://[project-id].supabase.co`)
    console.log(`   Got: ${url}`)
  }
}

console.log('\nüîç Environment check completed.')